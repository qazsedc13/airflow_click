services:
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      CLICKHOUSE_DB: airflow
      CLICKHOUSE_USER: airflow
      CLICKHOUSE_PASSWORD: airflow
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    healthcheck:
      test: ["CMD-SHELL", "clickhouse-client --query 'SELECT 1'"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres_data:
    image: postgres:13
    environment:
      POSTGRES_USER: data_user
      POSTGRES_PASSWORD: data_password
      POSTGRES_DB: data_db
    volumes:
      - postgres_data_volume:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # –ú–µ–Ω—è–µ–º –ø–æ—Ä—Ç, —á—Ç–æ–±—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞–ª —Å –æ—Å–Ω–æ–≤–Ω—ã–º PostgreSQL
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U data_user"]
      interval: 5s
      timeout: 5s
      retries: 5

  airflow-webserver:
    build: .
    image: custom-airflow
    command: >
      bash -c "
      while ! airflow db check; do sleep 5; done;
      airflow db migrate;
      airflow users create --username admin --password admin --firstname Admin --lastname Admin --role Admin --email admin@example.com || true;
      airflow connections add --conn-uri 'clickhouse://airflow:airflow@clickhouse:8123/airflow' clickhouse_conn || true;
      airflow connections add --conn-uri 'postgresql://data_user:data_password@postgres_data:5432/data_db' postgres_data_conn || true;
      airflow webserver
      "
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW_CONN_CLICKHOUSE_CONN: "clickhouse://airflow:airflow@clickhouse:8123/airflow"
      AIRFLOW__OPENLINEAGE__DISABLED: "true"
      AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS: "false"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç
      retries: 10   # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
      start_period: 120s  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥ —Å—Ç–∞—Ä—Ç–∞
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy

  airflow-scheduler:
    image: custom-airflow
    command: bash -c "airflow db check && airflow scheduler"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    restart: on-failure
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
      AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: "30"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW_CONN_CLICKHOUSE_CONN: "clickhouse://airflow:airflow@clickhouse:8123/airflow"
      AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS: "false"
      AIRFLOW__OPENLINEAGE__DISABLED: "true"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    depends_on:
      airflow-webserver:
        condition: service_healthy
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
  
  superset:
    build: ./superset
    image: superset-with-clickhouse
    container_name: superset
    ports:
      - "8088:8088"
    environment:
      - SUPERSET_SECRET_KEY=your-secret-key-change-me  # üîë –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π!
      - FLASK_APP=superset.app:create_app()
      - SUPERSET_ENABLE_PROXY_FIX=True
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_USER=airflow
      - CLICKHOUSE_PASSWORD=airflow
      - POSTGRES_DATA_HOST=postgres_data
      - POSTGRES_DATA_PORT=5432
      - POSTGRES_DATA_USER=data_user
      - POSTGRES_DATA_PASSWORD=data_password
      - POSTGRES_DATA_DB=data_db
    volumes:
      - superset_data:/var/lib/superset
      - ./superset:/app/superset_home
    depends_on:
      clickhouse:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  superset-init:
    image: superset-with-clickhouse
    depends_on:
      superset:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    command: bash -c "
        superset fab create-admin --username admin --firstname Admin --lastname User --email admin@example.com --password admin && 
        superset db upgrade && 
        superset init && 
        superset set-database-uri --database-name ClickHouse --uri clickhouse://airflow:airflow@clickhouse:8123/airflow &&
        superset set-database-uri --database-name PostgresData --uri postgresql+psycopg2://data_user:data_password@postgres_data/data_db
      "

    volumes:
      - ./superset:/app/superset_home
    environment:
      - SUPERSET_SECRET_KEY=your-secret-key-change-me
      - FLASK_APP=superset.app:create_app()

volumes:
  postgres_data:
  postgres_data_volume:
  clickhouse_data:
  superset_data: